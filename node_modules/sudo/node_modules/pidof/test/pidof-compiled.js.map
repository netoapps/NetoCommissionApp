{"version":3,"sources":["pidof.js"],"names":[],"mappings":";;AAAA,IAAI,SAAS,QAAQ,QAAR,CAAb;;AAEA,IAAI,SAAS,EAAb;AACA,UAAU,iBAAV;AACA,UAAU,wBAAV;AACA,UAAU,6BAAV;AACA,UAAU,gBAAV;AACA,UAAU,oBAAV;AACA,UAAU,2BAAV;AACA,UAAU,iCAAV;;AAEA,IAAI,QAAQ,QAAQ,cAAR,CAAZ;;AAEA,SAAS,cAAT,EAAyB,YAAY;AACjC,OAAG,iCAAH,EAAsC,YAAY;AAC9C,YAAI,MAAM,MAAM,KAAN,CAAY,MAAZ,EAAoB,KAApB,CAAV;AACA,eAAO,GAAP,CAAW,KAAX,CAAiB,GAAjB;AACH,KAHD;AAIA,OAAG,yBAAH,EAA8B,YAAY;AACtC,YAAI,MAAM,MAAM,KAAN,CAAY,MAAZ,EAAoB,QAApB,CAAV;AACA,eAAO,KAAP,CAAa,GAAb;AACA,YAAI,MAAJ,CAAW,KAAX,CAAiB,IAAjB;AACH,KAJD;AAKH,CAVD;;AAYA,SAAS,iBAAT,EAA4B,YAAY;AACpC,OAAG,yCAAH,EAA8C,UAAU,IAAV,EAAgB;AAC1D,cAAM,MAAN,EAAc,UAAU,GAAV,EAAe,GAAf,EAAoB;AAC9B,mBAAO,GAAP,CAAW,KAAX,CAAiB,GAAjB;AACA,mBAAO,KAAP,CAAa,GAAb;AACA;AACH,SAJD;AAKH,KAND;AAOA,OAAG,iEAAH,EAAsE,UAAU,IAAV,EAAgB;AAClF,cAAM,sCAAN,EAA8C,UAAU,GAAV,EAAe,GAAf,EAAoB;AAC9D,mBAAO,GAAP,CAAW,KAAX,CAAiB,GAAjB;AACA,mBAAO,GAAP,CAAW,KAAX,CAAiB,GAAjB;AACA;AACH,SAJD;AAKH,KAND;AAOH,CAfD","file":"pidof-compiled.js","sourcesContent":["var should = require('should');\n\nvar output = '';\noutput += '  PID COMMAND\\n';\noutput += ' 3574 /usr/lib/utmpd\\n';\noutput += ' 7213 /usr/lib/saf/ttymon\\n';\noutput += ' 3039 zsched\\n';\noutput += ' 3138 /sbin/init\\n';\noutput += ' 3211 /lib/inet/ipmgmtd\\n';\noutput += ' 3165 /lib/svc/bin/svc.startd\\n';\n\nvar pidof = require('../lib/pidof');\n\ndescribe('pidof parser', function () {\n    it('should return null for no match', function () {\n        var pid = pidof.parse(output, 'foo');\n        should.not.exist(pid);\n    });\n    it('should recognize output', function () {\n        var pid = pidof.parse(output, 'zsched');\n        should.exist(pid);\n        pid.should.equal(3039);\n    });\n});\n\ndescribe('pidoff callback', function () {\n    it('should find \"node\" running during tests', function (done) {\n        pidof('node', function (err, pid) {\n            should.not.exist(err);\n            should.exist(pid);\n            done();\n        });\n    });\n    it('should not find very unlikely process name running during tests', function (done) {\n        pidof('0FB001AB-CE37-4E43-A7DB-1FD8BD5D812C', function (err, pid) {\n            should.not.exist(err);\n            should.not.exist(pid);\n            done();\n        });\n    });\n});\n"]}