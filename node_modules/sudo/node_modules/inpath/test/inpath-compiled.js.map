{"version":3,"sources":["inpath.js"],"names":[],"mappings":";;AAAA,IAAI,SAAS,QAAQ,QAAR,CAAb;;AAEA,IAAI,SAAS,QAAQ,eAAR,CAAb;;AAEA,SAAS,oBAAT,EAA+B,YAAY;AACvC,OAAG,gDAAH,EAAqD,YAAY;AAC7D,YAAI,MAAM,OAAO,IAAP,CAAY,KAAZ,CAAV;AACA,eAAO,KAAP,CAAa,GAAb;AACA,YAAI,MAAJ,CAAW,KAAX,CAAiB,cAAjB;AACH,KAJD;AAKA,OAAG,0DAAH,EAA+D,YAAY;AACvE,YAAI,MAAM,OAAO,IAAP,CAAY,KAAZ,EAAmB,CAAE,gBAAF,EAAoB,qBAApB,CAAnB,CAAV;AACA,eAAO,GAAP,CAAW,KAAX,CAAiB,GAAjB;AACH,KAHD;AAIA,OAAG,wCAAH,EAA6C,YAAY;AACrD,YAAI,MAAM,OAAO,IAAP,CAAY,sCAAZ,CAAV;AACA,eAAO,GAAP,CAAW,KAAX,CAAiB,GAAjB;AACH,KAHD;AAIH,CAdD","file":"inpath-compiled.js","sourcesContent":["var should = require('should');\n\nvar inpath = require('../lib/inpath');\n\ndescribe('synchronous inpath', function () {\n    it('env should always be in /usr/bin/env (I think)', function () {\n        var env = inpath.sync('env');\n        should.exist(env);\n        env.should.equal('/usr/bin/env');\n    });\n    it('env should not be found in two unlikely random locations', function () {\n        var env = inpath.sync('env', [ '/tmp/somewhere', '/tmp/somewhere/else' ]);\n        should.not.exist(env);\n    });\n    it('an unlikely binary should not be found', function () {\n        var env = inpath.sync('4A87553D-6BAC-42EE-A699-BAF7830E453A');\n        should.not.exist(env);\n    });\n});\n"]}